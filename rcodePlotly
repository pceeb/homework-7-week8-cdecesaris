library(shiny)
library(plotly)

# this is a version of the previous code but serves as a test template for use of Plotly
# using plotly instead of stat_function gives our program more directions of use. This code is a single app can can be run
# in any r shiny single app, the code fills a data frame with x1 starting at 0 and runing to 50 and y1 a dependant value of x1
# this week, we will modifiy the existing code to fit this type of strucutre
xx<-data.frame(time1=seq(0,50))

server <- shinyServer(function(input, output) {

    output$testPlot <- renderPlotly({
        number_ticks <- function(n) {function(limits) pretty(limits, n)}
        x1<-xx[,1]
        y1<-input$p1 + input$p2*(x1)
         df = data.frame(x1 ,y1)
        ggplot(data=df, aes(x=x1, y=y1)) +
            geom_line(color =  "lightblue") +
            scale_x_continuous(breaks = number_ticks(10)) +
            scale_y_continuous(breaks = number_ticks(10))
        # plot(x, y, type = "l", pch = 1, col = 'red', ylim = c(0,75000))
    })

    
})

ui <- shinyUI(fluidPage(
    titlePanel("title"),
    sidebarLayout(
        sidebarPanel(
            
            numericInput("p1",
                        "Change P1", value = 0),
            numericInput("p2", 
                        "Change p2", value = 0)
            #checkboxInput("piece", "Piece-Wise" )
        ),
        mainPanel(
            plotlyOutput("testPlot")
            
        )
    )
))

shiny::shinyApp(ui=ui,server=server)
